version: v0.4.0
scopeName: source.rhai
# uuid: 77108132-b3a9-4456-b8e6-05fca177371b
information_for_contributors:
  - 'aster: galaster@foxmail.com'
patterns:
  - include: '#comment'
  - include: '#keywords'
  - include: '#string'
  - include: '#number'
  - include: '#symbol'
  - include: '#operators'
repository:
  comment:
    patterns:
      - name: comment.block.rhai
        begin: (/\*)
        beginCaptures:
          '1': {name: punctuation.definition.comment.block.rhai}
        end: (\*/)
        endCaptures:
          '1': {name: punctuation.definition.comment.block.rhai}
        patterns:
          - include: '#comment'
      - name: comment.line.rhai
        match: (//).*$\n?
        captures:
          '1': {name: punctuation.definition.comment.line.rhai}
  keywords:
    patterns:
      - match: \b(using|macro|let|def|as|in|with|type|external|extending|where)\b
        name: keyword.control.definition.rhai
      - match: \b(if|else|switch|match|case)\b
        name: keyword.control.flow.rhai
      - match: \b(do|while|loop|return|for|yield|break|pass)\b
        name: keyword.control.loop.rhai
      - match: \b(true|false)\b
        name: keyword.control.rhai
      - include: '#trait'
  trait:
    begin: \b(trait)\b
    beginCaptures:
      '1': {name: storage.type.trait.rhai}
    end: ([_0-9a-zA-Z]+)\s*[{;]
    endCaptures:
      '1': {name: entity.name.type.trait.rhai}
    patterns:
      - match: ([_0-9a-zA-Z]+)
        name: storage.modifier.rhai
  operators:
    patterns:
      - match: (===?|=!=|<=|>=|<>)
        name: keyword.operator.comparison.rhai
      - match: (\|>|/@|@@@|@@|@)
        name: keyword.operator.apply.rhai
      - match: (-|\+|\*|\/|\^)
        name: keyword.operator.arithmetic.rhai
      - match: (\?=|:=|=)
        name: keyword.operator.assignment.rhai
      - match: (∈|<:|:>|<-|->|:?)
        name: keyword.operator.set.rhai
      - match: (<|>)
        name: keyword.operator.comparison.rhai
      - match: (!|¬)
        name: keyword.operator.infix.rhai
      - match: (\?|°)
        name: keyword.operator.logical.rhai
  number:
    patterns:
      - match: (?<!\w)(0x[0-9a-fA-F]+)(_[A-Za-z][A-Za-z0-9_]*)?(?!\w)
        captures:
          '1': {name: constant.numeric.hex.rhai}
          '2': {name: keyword.control.handler.byte.rhai}
      - match: (?<!\w)(0o[0-7]+)(_[A-Za-z][A-Za-z0-9_]*)?(?!\w)
        captures:
          '1': {name: constant.numeric.oct.rhai}
          '2': {name: keyword.control.handler.byte.rhai}
      - match: (?<!\w)(0b[01]+)(_[A-Za-z][A-Za-z0-9_]*)?(?!\w)
        captures:
          '1': {name: constant.numeric.bin.rhai}
          '2': {name: keyword.control.handler.byte.rhai}
      - match: ([\+\-]?(0|([1-9](([0-9]|_[0-9])+)?))(?:(?:\.(0|([1-9](([0-9]|_[0-9])+)?)))?\*\*[\+\-]?[1-9]_?[0-9]*|(?:\.[0-9_]*)))
        captures:
          '1': {name: constant.numeric.decimal.rhai}
      - match: ([\+\-]?(0|[1-9][0-9]*))
        captures:
          '1': {name: constant.numeric.integer.rhai}
      - match: (¯|¨)
        captures:
          '1': {name: constant.numeric.control.rhai}
  string:
    patterns:
      - name: string.quoted.block.rhai
        begin: ([A-Za-z_][A-Za-z0-9_]*)?\s*(''')
        beginCaptures:
          '1': {name: keyword.control.handler.string.rhai}
          '2': {name: punctuation.definition.string.block.rhai}
        end: (''')
        endCaptures:
          '1': {name: punctuation.definition.string.block.rhai}
      - name: string.quoted.block.rhai
        begin: ([A-Za-z_][A-Za-z0-9_]*)?\s*(""")
        beginCaptures:
          '1': {name: keyword.control.handler.string.rhai}
          '2': {name: punctuation.definition.string.block.rhai}
        end: (""")
        endCaptures:
          '1': {name: punctuation.definition.string.block.rhai}
        patterns:
          - match: \\([btnfr"\\\n/]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})
            name: constant.character.escape.rhai
          - match: \\[^btnfr/"\\\n]
            name: invalid.illegal.escape.rhai
      - match: ([A-Za-z_][A-Za-z0-9_]*)?\s*(\'[^'\\]*(?:\\.[^'\\]*)*\')
        captures:
          '1': {name: keyword.control.handler.string.rhai}
          '2': {name: string.quoted.single.rhai}
      - match: ([A-Za-z_][A-Za-z0-9_]*)?\s*("[^"\\]*(?:\\.[^"\\]*)*")
        captures:
          '1': {name: keyword.control.handler.string.rhai}
          '2': {name: string.quoted.single.rhai}
        patterns:
          - match: \\([btnfr"\\\n/]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})
            name: constant.character.escape.rhai
          - match: \\[^btnfr/"\\\n]
            name: invalid.illegal.escape.rhai
  symbol:
    patterns:
      - match: (^@[a-zA-Z][_0-9a-zA-Z]*)
        name: variable.parameter.macro.ts
      - match: (\$[a-zA-Z][_0-9a-zA-Z]*)
        name: variable.parameter.macro.ts
      - match: ([_a-zA-Z][_0-9a-zA-Z]*)
        name: entity.name.function.rhai
      - match: (::)
        name: entity.name.function.namespace.rhai

